<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huawei.user.mapper.UserMapper">
    <select id="getAuthByRole" parameterType="String" resultType="String">
        SELECT auth_name
        FROM emergency_auth
        WHERE role_name = #{role}
    </select>
    <select id="selectUserByName" parameterType="String" resultType="com.huawei.user.entity.UserEntity">
        SELECT user_id AS userName, user_name AS nickName, password, role_name AS role
        FROM NUSER n
        WHERE n.user_id = #{userName}
    </select>
    <select id="countByName" parameterType="String" resultType="Integer">
        SELECT COUNT(1)
        FROM NUSER
        WHERE user_id = #{userName}
    </select>
    <update id="changePassword" parameterType="String">
        UPDATE NUSER
        SET password = #{password}
        WHERE user_id = #{userName}
    </update>

    <insert id="insertUser" parameterType="com.huawei.user.entity.UserEntity">
        INSERT INTO NUSER (created_date, last_modified_date, password, enabled, role_name, user_id, user_name)
        values (#{createTime}, #{updateTime}, #{password}, #{enabled}, #{role}, #{userName}, #{nickName})
    </insert>

    <select id="listUser" parameterType="com.huawei.user.entity.UserEntity"
            resultType="com.huawei.user.entity.UserEntity">
        SELECT
        n.user_id AS userName,
        n.user_name AS nickName,
        r.group_name,
        CASE
        r.role_name
        WHEN 'ADMIN' THEN
        '管理员'
        WHEN 'APPROVER' THEN
        '审核员'
        WHEN 'OPERATOR' THEN
        '操作员'
        END AS role,
        last_modified_date AS updateTime,
        CASE
        enabled
        WHEN 'T' THEN
        '正常'
        WHEN 'F' THEN
        '失效'
        END AS enabled
        FROM
        NUSER n,emergency_user_role r
        <where>
            n.role_name!='SUPER_USER' AND n.role_name!='SYSTEM_USER' AND n.user_id = r.user_name
            <if test="userName!=null and userName!=''">
                AND n.user_id LIKE CONCAT('%',#{userName},'%') ESCAPE '/'
            </if>
            <if test="nickName!=null and nickName!=''">
                AND n.user_name LIKE CONCAT('%',#{nickName},'%') ESCAPE '/'
            </if>
            <if test="role!=null and role!=''">
                AND r.role_name = #{role}
            </if>
            <if test="enabled!=null and enabled!=''">
                AND n.enabled = #{enabled}
            </if>
        </where>
    </select>

    <update id="updateEnableByName">
        UPDATE NUSER
        SET enabled = #{enable},last_modified_date=#{timestamp}
        WHERE user_id IN
        <foreach collection="usernames" item="userName" index="index" open="(" close=")" separator=",">
            #{userName}
        </foreach>
    </update>

    <update id="updatePwdByName">
        UPDATE NUSER
        SET password          = #{password},
            last_modified_date=#{timestamp}
        WHERE user_id = #{userName}
    </update>

    <update id="updateUser" parameterType="com.huawei.user.entity.UserEntity">
        UPDATE NUSER
        SET user_name         = #{nickName},
            role_name         = #{role},
            last_modified_date=#{updateTime}
        WHERE user_id = #{userName}
    </update>

    <select id="getRoleByUserName" parameterType="String" resultType="String">
        SELECT role_name
        FROM emergency_user_role
        WHERE user_name = #{userName}
    </select>

    <insert id="insertRole" parameterType="com.huawei.user.entity.UserEntity">
        INSERT INTO emergency_user_role (user_name,role_name,group_name) values (#{userName},#{role},#{groupName})
    </insert>

    <update id="updateRole" parameterType="com.huawei.user.entity.UserEntity">
        UPDATE emergency_user_role
        SET role_name=#{role},group_name=#{groupName}
        WHERE user_name=#{userName}
    </update>

    <select id="getUserStatus" parameterType="String" resultType="String">
        SELECT enabled
        FROM NUSER
        WHERE user_id = #{userName}
    </select>

    <select id="getGroupByUser" parameterType="String" resultType="String">
        SELECT group_name
        FROM emergency_user_role
        WHERE user_name = #{userName}
    </select>

    <select id="approverSearch" parameterType="String" resultType="String">
        SELECT user_name
        FROM emergency_user_role
        WHERE group_name = #{groupName}
          AND role_name = 'APPROVER'
    </select>

    <select id="adminApproverSearch" parameterType="String" resultType="String">
        SELECT user_name
        FROM emergency_user_role
        WHERE group_name = #{groupName}
          AND (role_name = 'APPROVER' OR role_name = 'ADMIN')
    </select>
</mapper>