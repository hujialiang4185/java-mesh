<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.emergency.mapper.EmergencyTaskMapper">
    <resultMap id="BaseResultMap" type="com.huawei.emergency.entity.EmergencyTask">
        <id column="task_id" jdbcType="INTEGER" property="taskId"/>
        <result column="task_no" jdbcType="VARCHAR" property="taskNo"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="task_type" jdbcType="VARCHAR" property="taskType"/>
        <result column="scene_id" jdbcType="INTEGER" property="sceneId"/>
        <result column="script_id" jdbcType="INTEGER" property="scriptId"/>
        <result column="server_id" jdbcType="VARCHAR" property="serverId"/>
        <result column="pre_task_id" jdbcType="INTEGER" property="preTaskId"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_valid" jdbcType="VARCHAR" property="isValid"/>
        <result column="channel_type" jdbcType="VARCHAR" property="channelType"/>
        <result column="script_name" jdbcType="VARCHAR" property="scriptName"/>
        <result column="submit_info" jdbcType="VARCHAR" property="submitInfo"/>
        <result column="perf_test_id" jdbcType="INTEGER" property="perfTestId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        task_id
        , task_no, task_name, task_type, scene_id, script_id, server_id, pre_task_id,
    create_user, create_time, is_valid, channel_type, script_name, submit_info, perf_test_id
    </sql>
    <select id="selectByExample" parameterType="com.huawei.emergency.entity.EmergencyTaskExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from emergency_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emergency_task
        where task_id = #{taskId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from emergency_task
        where task_id = #{taskId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.huawei.emergency.entity.EmergencyTaskExample">
        delete from emergency_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="task_id" keyProperty="taskId"
            parameterType="com.huawei.emergency.entity.EmergencyTask" useGeneratedKeys="true">
        insert into emergency_task (task_no, task_name, task_type,
                                    scene_id, script_id, server_id,
                                    pre_task_id, create_user, create_time,
                                    is_valid, channel_type, script_name,
                                    submit_info, perf_test_id)
        values (#{taskNo,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, #{taskType,jdbcType=VARCHAR},
                #{sceneId,jdbcType=INTEGER}, #{scriptId,jdbcType=INTEGER}, #{serverId,jdbcType=VARCHAR},
                #{preTaskId,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{isValid,jdbcType=VARCHAR}, #{channelType,jdbcType=VARCHAR}, #{scriptName,jdbcType=VARCHAR},
                #{submitInfo,jdbcType=VARCHAR}, #{perfTestId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="task_id" keyProperty="taskId"
            parameterType="com.huawei.emergency.entity.EmergencyTask" useGeneratedKeys="true">
        insert into emergency_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskNo != null">
                task_no,
            </if>
            <if test="taskName != null">
                task_name,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
            <if test="sceneId != null">
                scene_id,
            </if>
            <if test="scriptId != null">
                script_id,
            </if>
            <if test="serverId != null">
                server_id,
            </if>
            <if test="preTaskId != null">
                pre_task_id,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="channelType != null">
                channel_type,
            </if>
            <if test="scriptName != null">
                script_name,
            </if>
            <if test="submitInfo != null">
                submit_info,
            </if>
            <if test="perfTestId != null">
                perf_test_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskNo != null">
                #{taskNo,jdbcType=VARCHAR},
            </if>
            <if test="taskName != null">
                #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="taskType != null">
                #{taskType,jdbcType=VARCHAR},
            </if>
            <if test="sceneId != null">
                #{sceneId,jdbcType=INTEGER},
            </if>
            <if test="scriptId != null">
                #{scriptId,jdbcType=INTEGER},
            </if>
            <if test="serverId != null">
                #{serverId,jdbcType=VARCHAR},
            </if>
            <if test="preTaskId != null">
                #{preTaskId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=VARCHAR},
            </if>
            <if test="channelType != null">
                #{channelType,jdbcType=VARCHAR},
            </if>
            <if test="scriptName != null">
                #{scriptName,jdbcType=VARCHAR},
            </if>
            <if test="submitInfo != null">
                #{submitInfo,jdbcType=VARCHAR},
            </if>
            <if test="perfTestId != null">
                #{perfTestId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.huawei.emergency.entity.EmergencyTaskExample"
            resultType="java.lang.Long">
        select count(*) from emergency_task
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update emergency_task
        <set>
            <if test="record.taskId != null">
                task_id = #{record.taskId,jdbcType=INTEGER},
            </if>
            <if test="record.taskNo != null">
                task_no = #{record.taskNo,jdbcType=VARCHAR},
            </if>
            <if test="record.taskName != null">
                task_name = #{record.taskName,jdbcType=VARCHAR},
            </if>
            <if test="record.taskType != null">
                task_type = #{record.taskType,jdbcType=VARCHAR},
            </if>
            <if test="record.sceneId != null">
                scene_id = #{record.sceneId,jdbcType=INTEGER},
            </if>
            <if test="record.scriptId != null">
                script_id = #{record.scriptId,jdbcType=INTEGER},
            </if>
            <if test="record.serverId != null">
                server_id = #{record.serverId,jdbcType=VARCHAR},
            </if>
            <if test="record.preTaskId != null">
                pre_task_id = #{record.preTaskId,jdbcType=INTEGER},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isValid != null">
                is_valid = #{record.isValid,jdbcType=VARCHAR},
            </if>
            <if test="record.channelType != null">
                channel_type = #{record.channelType,jdbcType=VARCHAR},
            </if>
            <if test="record.scriptName != null">
                script_name = #{record.scriptName,jdbcType=VARCHAR},
            </if>
            <if test="record.submitInfo != null">
                submit_info = #{record.submitInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.perfTestId != null">
                perf_test_id = #{record.perfTestId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update emergency_task
        set task_id = #{record.taskId,jdbcType=INTEGER},
        task_no = #{record.taskNo,jdbcType=VARCHAR},
        task_name = #{record.taskName,jdbcType=VARCHAR},
        task_type = #{record.taskType,jdbcType=VARCHAR},
        scene_id = #{record.sceneId,jdbcType=INTEGER},
        script_id = #{record.scriptId,jdbcType=INTEGER},
        server_id = #{record.serverId,jdbcType=VARCHAR},
        pre_task_id = #{record.preTaskId,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        is_valid = #{record.isValid,jdbcType=VARCHAR},
        channel_type = #{record.channelType,jdbcType=VARCHAR},
        script_name = #{record.scriptName,jdbcType=VARCHAR},
        submit_info = #{record.submitInfo,jdbcType=VARCHAR},
        perf_test_id = #{record.perfTestId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.huawei.emergency.entity.EmergencyTask">
        update emergency_task
        <set>
            <if test="taskNo != null">
                task_no = #{taskNo,jdbcType=VARCHAR},
            </if>
            <if test="taskName != null">
                task_name = #{taskName,jdbcType=VARCHAR},
            </if>
            <if test="taskType != null">
                task_type = #{taskType,jdbcType=VARCHAR},
            </if>
            <if test="sceneId != null">
                scene_id = #{sceneId,jdbcType=INTEGER},
            </if>
            <if test="scriptId != null">
                script_id = #{scriptId,jdbcType=INTEGER},
            </if>
            <if test="serverId != null">
                server_id = #{serverId,jdbcType=VARCHAR},
            </if>
            <if test="preTaskId != null">
                pre_task_id = #{preTaskId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=VARCHAR},
            </if>
            <if test="channelType != null">
                channel_type = #{channelType,jdbcType=VARCHAR},
            </if>
            <if test="scriptName != null">
                script_name = #{scriptName,jdbcType=VARCHAR},
            </if>
            <if test="submitInfo != null">
                submit_info = #{submitInfo,jdbcType=VARCHAR},
            </if>
            <if test="perfTestId != null">
                perf_test_id = #{perfTestId,jdbcType=INTEGER},
            </if>
        </set>
        where task_id = #{taskId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huawei.emergency.entity.EmergencyTask">
        update emergency_task
        set task_no      = #{taskNo,jdbcType=VARCHAR},
            task_name    = #{taskName,jdbcType=VARCHAR},
            task_type    = #{taskType,jdbcType=VARCHAR},
            scene_id     = #{sceneId,jdbcType=INTEGER},
            script_id    = #{scriptId,jdbcType=INTEGER},
            server_id    = #{serverId,jdbcType=VARCHAR},
            pre_task_id  = #{preTaskId,jdbcType=INTEGER},
            create_user  = #{createUser,jdbcType=VARCHAR},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            is_valid     = #{isValid,jdbcType=VARCHAR},
            channel_type = #{channelType,jdbcType=VARCHAR},
            script_name  = #{scriptName,jdbcType=VARCHAR},
            submit_info  = #{submitInfo,jdbcType=VARCHAR},
            perf_test_id = #{perfTestId,jdbcType=INTEGER}
        where task_id = #{taskId,jdbcType=INTEGER}
    </update>
    <select id="countPassedPlanByTaskId" parameterType="Integer" resultType="java.lang.Long">
        SELECT count(1)
        FROM emergency_task t2,
             emergency_scene t3,
             emergency_plan t4
        WHERE t2.task_id = #{id}
          AND t3.id = t2.scene_id
          AND t4.plan_id = t3.plan_id
          AND t4.check_result = '1'
          AND t4.is_valid = '1'
    </select>
    <update id="tryClearTaskNo">
        UPDATE emergency_task t
        SET t.task_no = NULL
        WHERE t.is_valid = '1'
          AND t.task_id IN (
            SELECT scene_id AS task_id
            FROM emergency_plan_detail
            WHERE plan_id = #{planId}
              AND is_valid = '1'
            UNION
            SELECT task_id
            FROM emergency_plan_detail
            WHERE plan_id = #{planId}
              AND is_valid = '1'
        )
    </update>
    <select id="selectMaxSubTaskNo" resultType="java.lang.Integer">
        SELECT IFNULL(SUBSTR(max(task_no), LENGTH(#{preTaskNo}) + 1), 0)
        FROM `emergency_task`
        WHERE task_no LIKE concat(#{preTaskNo}, '%')
          and is_valid = '1'
    </select>
    <select id="getTaskReportByRecordId" resultType="com.huawei.emergency.dto.TaskCommonReport">
        SELECT t1.server_id                                       server_id,
               t2.name                                            test_name,
               t3.server_ip,
               t3.server_name,
               timestamp_diff('s', t2.start_time, t2.finish_time) duration,
               t2.vuser_per_agent                                 vuser,
               t2.tps,
               t2.peak_tps                                        tps_peak,
               t2.mean_test_time                                  avg_time,
               t2.tests + t2.errors                               test_count,
               t2.tests                                           success_count,
               t2.errors                                          fail_count,
               t2.status,
               t2.status                                          status_label,
               t2.id                                              test_id
        FROM emergency_exec_record_detail t1
                 JOIN PERF_TEST t2 ON t1.perf_test_id = t2.id
                 LEFT JOIN emergency_server t3 ON t1.server_id = t3.server_id
        WHERE t1.is_valid = '1'
          AND t1.record_id = #{recordId}
    </select>
</mapper>