<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.emergency.mapper.EmergencyExecMapper">
    <resultMap id="BaseResultMap" type="com.huawei.emergency.entity.EmergencyExec">
        <id column="exec_id" jdbcType="INTEGER" property="execId"/>
        <result column="plan_id" jdbcType="INTEGER" property="planId"/>
        <result column="scene_id" jdbcType="INTEGER" property="sceneId"/>
        <result column="task_id" jdbcType="INTEGER" property="taskId"/>
        <result column="task_detail_id" jdbcType="INTEGER" property="taskDetailId"/>
        <result column="script_id" jdbcType="INTEGER" property="scriptId"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        exec_id
        , plan_id, scene_id, task_id, task_detail_id, script_id, create_user, create_time,
    start_time, end_time
    </sql>
    <select id="selectByExample" parameterType="com.huawei.emergency.entity.EmergencyExecExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from emergency_exec
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emergency_exec
        where exec_id = #{execId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from emergency_exec
        where exec_id = #{execId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.huawei.emergency.entity.EmergencyExecExample">
        delete from emergency_exec
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="exec_id" keyProperty="execId"
            parameterType="com.huawei.emergency.entity.EmergencyExec" useGeneratedKeys="true">
        insert into emergency_exec (plan_id, scene_id, task_id,
                                    task_detail_id, script_id, create_user,
                                    create_time, start_time, end_time)
        values (#{planId,jdbcType=INTEGER}, #{sceneId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER},
                #{taskDetailId,jdbcType=INTEGER}, #{scriptId,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="exec_id" keyProperty="execId"
            parameterType="com.huawei.emergency.entity.EmergencyExec" useGeneratedKeys="true">
        insert into emergency_exec
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="planId != null">
                plan_id,
            </if>
            <if test="sceneId != null">
                scene_id,
            </if>
            <if test="taskId != null">
                task_id,
            </if>
            <if test="taskDetailId != null">
                task_detail_id,
            </if>
            <if test="scriptId != null">
                script_id,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="planId != null">
                #{planId,jdbcType=INTEGER},
            </if>
            <if test="sceneId != null">
                #{sceneId,jdbcType=INTEGER},
            </if>
            <if test="taskId != null">
                #{taskId,jdbcType=INTEGER},
            </if>
            <if test="taskDetailId != null">
                #{taskDetailId,jdbcType=INTEGER},
            </if>
            <if test="scriptId != null">
                #{scriptId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.huawei.emergency.entity.EmergencyExecExample"
            resultType="java.lang.Long">
        select count(*) from emergency_exec
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update emergency_exec
        <set>
            <if test="record.execId != null">
                exec_id = #{record.execId,jdbcType=INTEGER},
            </if>
            <if test="record.planId != null">
                plan_id = #{record.planId,jdbcType=INTEGER},
            </if>
            <if test="record.sceneId != null">
                scene_id = #{record.sceneId,jdbcType=INTEGER},
            </if>
            <if test="record.taskId != null">
                task_id = #{record.taskId,jdbcType=INTEGER},
            </if>
            <if test="record.taskDetailId != null">
                task_detail_id = #{record.taskDetailId,jdbcType=INTEGER},
            </if>
            <if test="record.scriptId != null">
                script_id = #{record.scriptId,jdbcType=INTEGER},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update emergency_exec
        set exec_id = #{record.execId,jdbcType=INTEGER},
        plan_id = #{record.planId,jdbcType=INTEGER},
        scene_id = #{record.sceneId,jdbcType=INTEGER},
        task_id = #{record.taskId,jdbcType=INTEGER},
        task_detail_id = #{record.taskDetailId,jdbcType=INTEGER},
        script_id = #{record.scriptId,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
        end_time = #{record.endTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.huawei.emergency.entity.EmergencyExec">
        update emergency_exec
        <set>
            <if test="planId != null">
                plan_id = #{planId,jdbcType=INTEGER},
            </if>
            <if test="sceneId != null">
                scene_id = #{sceneId,jdbcType=INTEGER},
            </if>
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=INTEGER},
            </if>
            <if test="taskDetailId != null">
                task_detail_id = #{taskDetailId,jdbcType=INTEGER},
            </if>
            <if test="scriptId != null">
                script_id = #{scriptId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where exec_id = #{execId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huawei.emergency.entity.EmergencyExec">
        update emergency_exec
        set plan_id        = #{planId,jdbcType=INTEGER},
            scene_id       = #{sceneId,jdbcType=INTEGER},
            task_id        = #{taskId,jdbcType=INTEGER},
            task_detail_id = #{taskDetailId,jdbcType=INTEGER},
            script_id      = #{scriptId,jdbcType=INTEGER},
            create_user    = #{createUser,jdbcType=VARCHAR},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            start_time     = #{startTime,jdbcType=TIMESTAMP},
            end_time       = #{endTime,jdbcType=TIMESTAMP}
        where exec_id = #{execId,jdbcType=INTEGER}
    </update>

    <select id="allPlanRecords" resultType="com.huawei.emergency.dto.PlanQueryDto">
        SELECT
        t1.exec_id as key,
        t1.exec_id as history_id,
        t1.plan_id,
        t2.plan_no,
        t2.plan_name,
        NULLIF((select user_name from NUSER where user_id = t1.create_user),t1.create_user) creator,
        to_char( t1.create_time, 'yyyy-mm-dd hh24:mi:ss' ) create_time,
        to_char( t1.create_time, 'yyyy-mm-dd hh24:mi:ss' ) execute_time,
        to_char(NULLIF(min(t3.start_time),t1.create_time), 'yyyy-mm-dd hh24:mi:ss') start_time,
        parse_exec_status(parse_scene_exec_status(t1.exec_id,0)) status
        FROM
        emergency_exec t1
        JOIN emergency_plan t2 ON t1.plan_id = t2.plan_id
        left JOIN emergency_exec_record t3 on t1.exec_id = t3.exec_id and t3.is_valid='1'
        where t1.plan_id is not null
        <if test="param1.planName != null and param1.planName != ''">
            and instr(#{param1.planName},t2.plan_name) > -1
        </if>
        <if test="filters.planNames != null and filters.planNames.length > 0">
            and t2.plan_name in
            <foreach close=")" collection="filters.planNames" index="index" item="planName" open="(" separator=",">
                #{planName}
            </foreach>
        </if>
        <if test="filters.creators != null and filters.creators.length > 0">
            and NULLIF((select user_name from NUSER where user_id = t1.create_user),t1.create_user) in
            <foreach close=")" collection="filters.creators" index="index" item="creator" open="(" separator=",">
                #{creator}
            </foreach>
        </if>
        group by t1.exec_id,t2.plan_no,t2.plan_name
        ORDER BY
        t1.create_time DESC
    </select>
    <select id="allSceneRecords" resultType="com.huawei.emergency.dto.SceneExecDto">
        SELECT t1.record_id as key,
               t1.exec_id,
               t1.scene_id,
               t2.task_no                                                scene_no,
               t2.task_name                                              scene_name,
               t1.scene_id     as                                        scena_id,
               t2.task_no                                                scena_no,
               t2.task_name                                              scena_name,
               (
                   CASE

                       WHEN parse_scene_exec_status(t1.exec_id, t1.scene_id) = '0' THEN
                           'wait'
                       WHEN parse_scene_exec_status(t1.exec_id, t1.scene_id) = '1' THEN
                           'process'
                       WHEN parse_scene_exec_status(t1.exec_id, t1.scene_id) IN ('2', '5') THEN
                           'finish'
                       WHEN parse_scene_exec_status(t1.exec_id, t1.scene_id) IN ('3', '4', '6') THEN
                           'error'
                       ELSE t1.status
                       END
                   )                                                     status,
               parse_exec_status(
                       parse_scene_exec_status(t1.exec_id, t1.scene_id)) status_label,
               t1.perf_test_id as                                        testId
        FROM emergency_exec_record t1
            LEFT JOIN emergency_task t2
        ON t1.scene_id = t2.task_id
        WHERE t1.exec_id = #{execId}
          AND t1.is_valid = '1'
          and t1.task_id is null
        order by t2.task_no
    </select>
    <select id="allTaskRecords" resultType="com.huawei.emergency.dto.SceneExecDto">
        SELECT t1.record_id as key,
               t1.exec_id,
               t1.scene_id,
               scene.task_no                                                                        scene_no,
               scene.task_name                                                                      scene_name,
               t1.scene_id     as                                                                   scena_id,
               scene.task_no                                                                        scena_no,
               scene.task_name                                                                      scena_name,
               task.task_no,
               task.task_name,
               (CASE
                    WHEN t1.status = '0' THEN
                        'wait'
                    WHEN t1.status = '1' THEN
                        'process'
                    WHEN t1.status IN ('2', '5', '6') THEN
                        'finish'
                    WHEN t1.status IN ('3', '4') THEN
                        'error'
                    ELSE t1.status
                   END
                   )                                                                                status,
               parse_exec_status(t1.status)                                                       status_label,
               to_char(t1.start_time, 'yyyy-mm-dd hh24:mi:ss')                                      start_time,
               to_char(t1.end_time, 'yyyy-mm-dd hh24:mi:ss')                                        end_time,
               t1.sync,
               NULLIF((select user_name from NUSER where user_id = t1.create_user), t1.create_user) "operator",
               t1.perf_test_id as                                                                   testId
        FROM emergency_exec_record t1
            LEFT JOIN emergency_task scene
        ON t1.scene_id = scene.task_id
            LEFT JOIN emergency_task task ON t1.task_id = task.task_id
        WHERE t1.exec_id = #{execId}
          AND t1.scene_id = #{sceneId}
          AND t1.is_valid = '1'
        ORDER BY task.task_no
    </select>
    <select id="allRecords" resultType="java.util.LinkedHashMap">
        SELECT t1.exec_id AS                                    执行编号,
               t3.plan_no                                       预案编号,
               t3.plan_name                                     预案名称,
               count(DISTINCT t2.scene_id)                      场景数量,
               count(DISTINCT t2.task_id)                       任务数量,
               count(DISTINCT t2.task_detail_id)                子任务数量,
               SUM(CASE WHEN t2.status = '0' THEN 1 ELSE 0 END) 待执行,
               SUM(CASE WHEN t2.status = '1' THEN 1 ELSE 0 END) 执行中,
               SUM(CASE WHEN t2.status = '2' THEN 1 ELSE 0 END) 执行成功,
               SUM(CASE WHEN t2.status = '3' THEN 1 ELSE 0 END) 执行失败,
               SUM(CASE WHEN t2.status = '4' THEN 1 ELSE 0 END) 执行取消,
               SUM(CASE WHEN t2.status = '5' THEN 1 ELSE 0 END) 人工确认成功,
               min(t2.start_time)                               开始时间,
               max(t2.end_time)                                 结束时间,
               TIMESTAMPDIFF(
                   SECOND, min(t2.start_time),
                           max(t2.end_time))                    耗时(s)
        FROM emergency_exec t1
                 LEFT JOIN emergency_exec_record t2 ON t1.exec_id = t2.exec_id
                 LEFT JOIN emergency_plan t3 ON t2.plan_id = t3.plan_id
        where t1.plan_id is not null
        GROUP BY t1.exec_id,
                 t3.plan_no,
                 t3.plan_name
    </select>
</mapper>