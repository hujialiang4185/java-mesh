<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.emergency.mapper.EmergencyPlanDetailMapper">
    <resultMap id="BaseResultMap" type="com.huawei.emergency.entity.EmergencyPlanDetail">
        <id column="detail_id" jdbcType="INTEGER" property="detailId"/>
        <result column="plan_id" jdbcType="INTEGER" property="planId"/>
        <result column="scene_id" jdbcType="INTEGER" property="sceneId"/>
        <result column="task_id" jdbcType="INTEGER" property="taskId"/>
        <result column="pre_scene_id" jdbcType="INTEGER" property="preSceneId"/>
        <result column="pre_task_id" jdbcType="INTEGER" property="preTaskId"/>
        <result column="parent_task_id" jdbcType="INTEGER" property="parentTaskId"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="is_valid" jdbcType="VARCHAR" property="isValid"/>
        <result column="sync" jdbcType="VARCHAR" property="sync"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        detail_id
        , plan_id, scene_id, task_id, pre_scene_id, pre_task_id, parent_task_id,
    create_user, create_time, is_valid, sync
    </sql>
    <select id="selectByExample" parameterType="com.huawei.emergency.entity.EmergencyPlanDetailExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from emergency_plan_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emergency_plan_detail
        where detail_id = #{detailId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from emergency_plan_detail
        where detail_id = #{detailId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.huawei.emergency.entity.EmergencyPlanDetailExample">
        delete from emergency_plan_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="detail_id" keyProperty="detailId"
            parameterType="com.huawei.emergency.entity.EmergencyPlanDetail" useGeneratedKeys="true">
        insert into emergency_plan_detail (plan_id, scene_id, task_id,
                                           pre_scene_id, pre_task_id, parent_task_id,
                                           create_user, create_time, is_valid,
                                           sync)
        values (#{planId,jdbcType=INTEGER}, #{sceneId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER},
                #{preSceneId,jdbcType=INTEGER}, #{preTaskId,jdbcType=INTEGER}, #{parentTaskId,jdbcType=INTEGER},
                #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isValid,jdbcType=VARCHAR},
                #{sync,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="detail_id" keyProperty="detailId"
            parameterType="com.huawei.emergency.entity.EmergencyPlanDetail" useGeneratedKeys="true">
        insert into emergency_plan_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="planId != null">
                plan_id,
            </if>
            <if test="sceneId != null">
                scene_id,
            </if>
            <if test="taskId != null">
                task_id,
            </if>
            <if test="preSceneId != null">
                pre_scene_id,
            </if>
            <if test="preTaskId != null">
                pre_task_id,
            </if>
            <if test="parentTaskId != null">
                parent_task_id,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="sync != null">
                sync,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="planId != null">
                #{planId,jdbcType=INTEGER},
            </if>
            <if test="sceneId != null">
                #{sceneId,jdbcType=INTEGER},
            </if>
            <if test="taskId != null">
                #{taskId,jdbcType=INTEGER},
            </if>
            <if test="preSceneId != null">
                #{preSceneId,jdbcType=INTEGER},
            </if>
            <if test="preTaskId != null">
                #{preTaskId,jdbcType=INTEGER},
            </if>
            <if test="parentTaskId != null">
                #{parentTaskId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=VARCHAR},
            </if>
            <if test="sync != null">
                #{sync,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.huawei.emergency.entity.EmergencyPlanDetailExample"
            resultType="java.lang.Long">
        select count(*) from emergency_plan_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update emergency_plan_detail
        <set>
            <if test="record.detailId != null">
                detail_id = #{record.detailId,jdbcType=INTEGER},
            </if>
            <if test="record.planId != null">
                plan_id = #{record.planId,jdbcType=INTEGER},
            </if>
            <if test="record.sceneId != null">
                scene_id = #{record.sceneId,jdbcType=INTEGER},
            </if>
            <if test="record.taskId != null">
                task_id = #{record.taskId,jdbcType=INTEGER},
            </if>
            <if test="record.preSceneId != null">
                pre_scene_id = #{record.preSceneId,jdbcType=INTEGER},
            </if>
            <if test="record.preTaskId != null">
                pre_task_id = #{record.preTaskId,jdbcType=INTEGER},
            </if>
            <if test="record.parentTaskId != null">
                parent_task_id = #{record.parentTaskId,jdbcType=INTEGER},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isValid != null">
                is_valid = #{record.isValid,jdbcType=VARCHAR},
            </if>
            <if test="record.sync != null">
                sync = #{record.sync,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update emergency_plan_detail
        set detail_id = #{record.detailId,jdbcType=INTEGER},
        plan_id = #{record.planId,jdbcType=INTEGER},
        scene_id = #{record.sceneId,jdbcType=INTEGER},
        task_id = #{record.taskId,jdbcType=INTEGER},
        pre_scene_id = #{record.preSceneId,jdbcType=INTEGER},
        pre_task_id = #{record.preTaskId,jdbcType=INTEGER},
        parent_task_id = #{record.parentTaskId,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        is_valid = #{record.isValid,jdbcType=VARCHAR},
        sync = #{record.sync,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.huawei.emergency.entity.EmergencyPlanDetail">
        update emergency_plan_detail
        <set>
            <if test="planId != null">
                plan_id = #{planId,jdbcType=INTEGER},
            </if>
            <if test="sceneId != null">
                scene_id = #{sceneId,jdbcType=INTEGER},
            </if>
            <if test="taskId != null">
                task_id = #{taskId,jdbcType=INTEGER},
            </if>
            <if test="preSceneId != null">
                pre_scene_id = #{preSceneId,jdbcType=INTEGER},
            </if>
            <if test="preTaskId != null">
                pre_task_id = #{preTaskId,jdbcType=INTEGER},
            </if>
            <if test="parentTaskId != null">
                parent_task_id = #{parentTaskId,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=VARCHAR},
            </if>
            <if test="sync != null">
                sync = #{sync,jdbcType=VARCHAR},
            </if>
        </set>
        where detail_id = #{detailId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huawei.emergency.entity.EmergencyPlanDetail">
        update emergency_plan_detail
        set plan_id        = #{planId,jdbcType=INTEGER},
            scene_id       = #{sceneId,jdbcType=INTEGER},
            task_id        = #{taskId,jdbcType=INTEGER},
            pre_scene_id   = #{preSceneId,jdbcType=INTEGER},
            pre_task_id    = #{preTaskId,jdbcType=INTEGER},
            parent_task_id = #{parentTaskId,jdbcType=INTEGER},
            create_user    = #{createUser,jdbcType=VARCHAR},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            is_valid       = #{isValid,jdbcType=VARCHAR},
            sync           = #{sync,jdbcType=VARCHAR}
        where detail_id = #{detailId,jdbcType=INTEGER}
    </update>

    <select id="selectSceneNodeByPlanId" resultType="com.huawei.emergency.dto.TaskNode">
        SELECT t1.scene_id AS key,
               t1.plan_id,
               t1.scene_id,
               t1.task_id,
               t2.task_name AS title,
               t2.task_no,
               t2.task_name,
               t2.channel_type,
               t3.script_name,
               t3.submit_info,
               t1.sync,
               t2.task_type,
        t2.task_desc AS scena_desc,t2.server_id
        FROM emergency_plan_detail t1
            LEFT JOIN emergency_task t2
        ON t1.scene_id = t2.task_id
            LEFT JOIN emergency_script t3 ON t2.script_id = t3.script_id
        WHERE t1.plan_id = #{planId}
          AND t1.is_valid = '1'
          AND t1.task_id IS NULL;
    </select>
    <select id="selectTaskNodeBySceneId" resultType="com.huawei.emergency.dto.TaskNode">
        SELECT t1.task_id AS key,
               t1.plan_id,
               t1.scene_id,
               t1.task_id,
               t2.task_name AS title,
               t2.task_no,
               t2.task_name,
               t2.channel_type,
               t3.script_name,
               t3.submit_info,
               t1.sync,
               t2.perf_test_id,
               t2.task_type,
        t2.server_id
        FROM emergency_plan_detail t1
            LEFT JOIN emergency_task t2
        ON t1.task_id = t2.task_id
            LEFT JOIN emergency_script t3 ON t2.script_id = t3.script_id
        WHERE t1.plan_id = #{planId}
          AND t1.scene_id = #{sceneId}
          AND t1.parent_task_id = #{sceneId}
          AND t1.is_valid = '1'
          AND t1.task_id IS NOT NULL
    </select>
    <select id="selectTaskNodeByTaskId" resultType="com.huawei.emergency.dto.TaskNode">
        SELECT t1.task_id AS key,
               t1.plan_id,
               t1.scene_id,
               t1.task_id,
               t2.task_name AS title,
               t2.task_no,
               t2.task_name,
               t2.channel_type,
               t3.script_name,
               t3.submit_info,
               t1.sync,
               t2.perf_test_id,
               t2.task_type,t2.server_id
        FROM emergency_plan_detail t1
            LEFT JOIN emergency_task t2
        ON t1.task_id = t2.task_id
            LEFT JOIN emergency_script t3 ON t2.script_id = t3.script_id
        WHERE t1.plan_id = #{planId}
          AND t1.scene_id = #{sceneId}
          AND t1.parent_task_id = #{taskId}
          AND t1.is_valid = '1'
          AND t1.task_id IS NOT NULL
    </select>

    <select id="selectPlanByTaskId" resultType="com.huawei.emergency.entity.EmergencyPlan">
        SELECT *
        FROM emergency_plan
        WHERE plan_id IN (
            SELECT DISTINCT plan_id
            FROM emergency_plan_detail t1
            WHERE t1.task_id = #{taskId}
               OR t1.scene_id = #{taskId}
                AND t1.is_valid = '1')
          and is_valid = '1'
    </select>
</mapper>