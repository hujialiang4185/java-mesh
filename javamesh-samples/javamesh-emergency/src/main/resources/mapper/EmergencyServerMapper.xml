<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.emergency.mapper.EmergencyServerMapper">
    <resultMap id="BaseResultMap" type="com.huawei.emergency.entity.EmergencyServer">
        <id column="server_id" jdbcType="INTEGER" property="serverId"/>
        <result column="server_name" jdbcType="VARCHAR" property="serverName"/>
        <result column="server_user" jdbcType="VARCHAR" property="serverUser"/>
        <result column="server_ip" jdbcType="VARCHAR" property="serverIp"/>
        <result column="server_port" jdbcType="INTEGER" property="serverPort"/>
        <result column="server_memory" jdbcType="INTEGER" property="serverMemory"/>
        <result column="have_password" jdbcType="VARCHAR" property="havePassword"/>
        <result column="password_mode" jdbcType="VARCHAR" property="passwordMode"/>
        <result column="password_uri" jdbcType="VARCHAR" property="passwordUri"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="licensed" jdbcType="VARCHAR" property="licensed"/>
        <result column="agent_name" jdbcType="VARCHAR" property="agentName"/>
        <result column="agent_port" jdbcType="INTEGER" property="agentPort"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="is_valid" jdbcType="VARCHAR" property="isValid"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="server_group" jdbcType="VARCHAR" property="serverGroup"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                            separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        server_id
        , server_name, server_user, server_ip, server_port, server_memory, have_password,
    password_mode, password_uri, password, licensed, agent_name, agent_port, create_user, 
    create_time, update_time, update_user, is_valid, status, server_group
    </sql>
    <select id="selectByExample" parameterType="com.huawei.emergency.entity.EmergencyServerExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from emergency_server
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from emergency_server
        where server_id = #{serverId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from emergency_server
        where server_id = #{serverId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.huawei.emergency.entity.EmergencyServerExample">
        delete from emergency_server
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="server_id" keyProperty="serverId"
            parameterType="com.huawei.emergency.entity.EmergencyServer" useGeneratedKeys="true">
        insert into emergency_server (server_name, server_user, server_ip,
                                      server_port, server_memory, have_password,
                                      password_mode, password_uri, password,
                                      licensed, agent_name, agent_port,
                                      create_user, create_time, update_time,
                                      update_user, is_valid, status,
                                      server_group)
        values (#{serverName,jdbcType=VARCHAR}, #{serverUser,jdbcType=VARCHAR}, #{serverIp,jdbcType=VARCHAR},
                #{serverPort,jdbcType=INTEGER}, #{serverMemory,jdbcType=INTEGER}, #{havePassword,jdbcType=VARCHAR},
                #{passwordMode,jdbcType=VARCHAR}, #{passwordUri,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{licensed,jdbcType=VARCHAR}, #{agentName,jdbcType=VARCHAR}, #{agentPort,jdbcType=INTEGER},
                #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{updateUser,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
                #{serverGroup,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="server_id" keyProperty="serverId"
            parameterType="com.huawei.emergency.entity.EmergencyServer" useGeneratedKeys="true">
        insert into emergency_server
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="serverName != null">
                server_name,
            </if>
            <if test="serverUser != null">
                server_user,
            </if>
            <if test="serverIp != null">
                server_ip,
            </if>
            <if test="serverPort != null">
                server_port,
            </if>
            <if test="serverMemory != null">
                server_memory,
            </if>
            <if test="havePassword != null">
                have_password,
            </if>
            <if test="passwordMode != null">
                password_mode,
            </if>
            <if test="passwordUri != null">
                password_uri,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="licensed != null">
                licensed,
            </if>
            <if test="agentName != null">
                agent_name,
            </if>
            <if test="agentPort != null">
                agent_port,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="serverGroup != null">
                server_group,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="serverName != null">
                #{serverName,jdbcType=VARCHAR},
            </if>
            <if test="serverUser != null">
                #{serverUser,jdbcType=VARCHAR},
            </if>
            <if test="serverIp != null">
                #{serverIp,jdbcType=VARCHAR},
            </if>
            <if test="serverPort != null">
                #{serverPort,jdbcType=INTEGER},
            </if>
            <if test="serverMemory != null">
                #{serverMemory,jdbcType=INTEGER},
            </if>
            <if test="havePassword != null">
                #{havePassword,jdbcType=VARCHAR},
            </if>
            <if test="passwordMode != null">
                #{passwordMode,jdbcType=VARCHAR},
            </if>
            <if test="passwordUri != null">
                #{passwordUri,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="licensed != null">
                #{licensed,jdbcType=VARCHAR},
            </if>
            <if test="agentName != null">
                #{agentName,jdbcType=VARCHAR},
            </if>
            <if test="agentPort != null">
                #{agentPort,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="serverGroup != null">
                #{serverGroup,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.huawei.emergency.entity.EmergencyServerExample"
            resultType="java.lang.Long">
        select count(*) from emergency_server
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update emergency_server
        <set>
            <if test="record.serverId != null">
                server_id = #{record.serverId,jdbcType=INTEGER},
            </if>
            <if test="record.serverName != null">
                server_name = #{record.serverName,jdbcType=VARCHAR},
            </if>
            <if test="record.serverUser != null">
                server_user = #{record.serverUser,jdbcType=VARCHAR},
            </if>
            <if test="record.serverIp != null">
                server_ip = #{record.serverIp,jdbcType=VARCHAR},
            </if>
            <if test="record.serverPort != null">
                server_port = #{record.serverPort,jdbcType=INTEGER},
            </if>
            <if test="record.serverMemory != null">
                server_memory = #{record.serverMemory,jdbcType=INTEGER},
            </if>
            <if test="record.havePassword != null">
                have_password = #{record.havePassword,jdbcType=VARCHAR},
            </if>
            <if test="record.passwordMode != null">
                password_mode = #{record.passwordMode,jdbcType=VARCHAR},
            </if>
            <if test="record.passwordUri != null">
                password_uri = #{record.passwordUri,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.licensed != null">
                licensed = #{record.licensed,jdbcType=VARCHAR},
            </if>
            <if test="record.agentName != null">
                agent_name = #{record.agentName,jdbcType=VARCHAR},
            </if>
            <if test="record.agentPort != null">
                agent_port = #{record.agentPort,jdbcType=INTEGER},
            </if>
            <if test="record.createUser != null">
                create_user = #{record.createUser,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateUser != null">
                update_user = #{record.updateUser,jdbcType=VARCHAR},
            </if>
            <if test="record.isValid != null">
                is_valid = #{record.isValid,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.serverGroup != null">
                server_group = #{record.serverGroup,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update emergency_server
        set server_id = #{record.serverId,jdbcType=INTEGER},
        server_name = #{record.serverName,jdbcType=VARCHAR},
        server_user = #{record.serverUser,jdbcType=VARCHAR},
        server_ip = #{record.serverIp,jdbcType=VARCHAR},
        server_port = #{record.serverPort,jdbcType=INTEGER},
        server_memory = #{record.serverMemory,jdbcType=INTEGER},
        have_password = #{record.havePassword,jdbcType=VARCHAR},
        password_mode = #{record.passwordMode,jdbcType=VARCHAR},
        password_uri = #{record.passwordUri,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        licensed = #{record.licensed,jdbcType=VARCHAR},
        agent_name = #{record.agentName,jdbcType=VARCHAR},
        agent_port = #{record.agentPort,jdbcType=INTEGER},
        create_user = #{record.createUser,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        update_user = #{record.updateUser,jdbcType=VARCHAR},
        is_valid = #{record.isValid,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        server_group = #{record.serverGroup,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.huawei.emergency.entity.EmergencyServer">
        update emergency_server
        <set>
            <if test="serverName != null">
                server_name = #{serverName,jdbcType=VARCHAR},
            </if>
            <if test="serverUser != null">
                server_user = #{serverUser,jdbcType=VARCHAR},
            </if>
            <if test="serverIp != null">
                server_ip = #{serverIp,jdbcType=VARCHAR},
            </if>
            <if test="serverPort != null">
                server_port = #{serverPort,jdbcType=INTEGER},
            </if>
            <if test="serverMemory != null">
                server_memory = #{serverMemory,jdbcType=INTEGER},
            </if>
            <if test="havePassword != null">
                have_password = #{havePassword,jdbcType=VARCHAR},
            </if>
            <if test="passwordMode != null">
                password_mode = #{passwordMode,jdbcType=VARCHAR},
            </if>
            <if test="passwordUri != null">
                password_uri = #{passwordUri,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="licensed != null">
                licensed = #{licensed,jdbcType=VARCHAR},
            </if>
            <if test="agentName != null">
                agent_name = #{agentName,jdbcType=VARCHAR},
            </if>
            <if test="agentPort != null">
                agent_port = #{agentPort,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="serverGroup != null">
                server_group = #{serverGroup,jdbcType=VARCHAR},
            </if>
        </set>
        where server_id = #{serverId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.huawei.emergency.entity.EmergencyServer">
        update emergency_server
        set server_name   = #{serverName,jdbcType=VARCHAR},
            server_user   = #{serverUser,jdbcType=VARCHAR},
            server_ip     = #{serverIp,jdbcType=VARCHAR},
            server_port   = #{serverPort,jdbcType=INTEGER},
            server_memory = #{serverMemory,jdbcType=INTEGER},
            have_password = #{havePassword,jdbcType=VARCHAR},
            password_mode = #{passwordMode,jdbcType=VARCHAR},
            password_uri  = #{passwordUri,jdbcType=VARCHAR},
            password      = #{password,jdbcType=VARCHAR},
            licensed      = #{licensed,jdbcType=VARCHAR},
            agent_name    = #{agentName,jdbcType=VARCHAR},
            agent_port    = #{agentPort,jdbcType=INTEGER},
            create_user   = #{createUser,jdbcType=VARCHAR},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            update_time   = #{updateTime,jdbcType=TIMESTAMP},
            update_user   = #{updateUser,jdbcType=VARCHAR},
            is_valid      = #{isValid,jdbcType=VARCHAR},
            status        = #{status,jdbcType=VARCHAR},
            server_group  = #{serverGroup,jdbcType=VARCHAR}
        where server_id = #{serverId,jdbcType=INTEGER}
    </update>
    <select id="selectByKeyword" resultType="com.huawei.emergency.dto.ServerAgentInfoDTO">
        SELECT
        server_table.server_id,
        server_table.`server_name`,
        server_table.server_ip,
        server_table.server_user,
        CASE

        WHEN server_table.have_password = '0' THEN
        '无' ELSE '有'
        END have_password,
        CASE

        WHEN server_table.password_mode = '0' THEN
        '本地'
        WHEN server_table.password_mode = '1' THEN
        '平台' ELSE password_mode
        END password_mode,
        server_group AS group_name,
        server_table.create_time,
        CASE

        WHEN agent_table.agent_status = 'READY' THEN
        '准备中'
        WHEN agent_table.agent_status = 'PROGRESSING' THEN
        '运行中'
        WHEN agent_table.agent_status = 'INACTIVE' THEN
        '不可用' ELSE agent_table.agent_status
        END agent_status_label,
        concat( agent_table.agent_id, '-', agent_table.agent_type ) id,
        agent_table.*
        FROM
        emergency_server server_table
        LEFT JOIN (
        SELECT
        id agent_id,
        hostName agent_name,
        ip agent_ip,
        PORT agent_port,
        'gui' agent_type,
        '压测agent' agent_type_label,
        CASE

        WHEN state IN ( 'STARTED', 'READY', 'FINISHED' ) THEN
        'READY'
        WHEN state IN ( 'INACTIVE', 'WRONG_REGION', 'UNKNOWN' ) THEN
        'INACTIVE'
        WHEN state IN ( 'BUSY', 'UPDATING' ) THEN
        'PROGRESSING' ELSE state
        END agent_status,
        CASE

        WHEN approved = 'T' THEN
        'true' ELSE 'false'
        END licensed
        FROM
        AGENT UNION
        SELECT
        agent_id,
        agent_name,
        agent_ip,
        agent_port,
        'normal' agent_type,
        '命令行agent' agent_type_label,
        agent_status,
        'true' licensed
        FROM
        emergency_agent
        WHERE
        is_valid = '1'
        ) agent_table ON server_table.server_ip = agent_table.agent_ip
        WHERE
        server_table.is_valid = '1'
        <if test="server != null and server.serverGroup != null and server.serverGroup != ''">
            and server_group = #{server.serverGroup}
        </if>
        <if test="nameOrIp !=null and nameOrIp != ''">
            and (locate(#{nameOrIp},server_table.server_name) &gt; 0 or locate(#{nameOrIp},server_table.server_ip) &gt;
            0
            or locate(#{nameOrIp},agent_table.agent_name) &gt; 0)
        </if>
        <if test="server !=null and server.serverName != null and server.serverName != ''">
            and locate(#{server.serverName},server_table.server_name) &gt; 0
        </if>
        <if test=" excludeServerIds != null and excludeServerIds.length &gt; 0">
            and server_id not in
            <foreach close=")" collection="excludeServerIds" index="index" item="serverId" open="(" separator=",">
                #{serverId}
            </foreach>
        </if>
        <if test="server != null and server.agentType != null and server.agentType != ''">
            and agent_type = #{server.agentType}
        </if>
        <if test="server != null and server.filterActive != null and server.filterActive != ''">
            and agent_status != 'INACTIVE'
        </if>
        <if test=" includeAgentIds != null and includeAgentIds.length &gt; 0">
            and agent_id in
            <foreach close=")" collection="includeAgentIds" index="index" item="agentId" open="(" separator=",">
                #{agentId}
            </foreach>
        </if>
        ORDER BY
        create_time DESC
    </select>
    <select id="selectAgentIdsByServerIds" resultType="java.lang.Integer">
        select t2.id
        from emergency_server t1, AGENT t2
        where t1.is_valid = '1'
        and t2.state != 'INACTIVE'
        and t1.server_ip = t2.ip
        <if test=" allServerIds != null and allServerIds.size &gt; 0">
            and t1.server_id in
            <foreach close=")" collection="allServerIds" index="index" item="serverId" open="(" separator=",">
                #{serverId}
            </foreach>
        </if>
    </select>
</mapper>